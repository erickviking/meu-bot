// src/handlers/nepq.handler.js
const { detectSimpleIntent, getRandomResponse, extractFirstName } = require('../utils/helpers');
const { isEmergency, getEmergencyResponse } = require('../utils/emergencyDetector');

// Esta fun√ß√£o agora √© o "c√©rebro" da conversa.
async function handleConversationFlow(session, message) {
    try {
        const intent = detectSimpleIntent(message);

        // Tratamento de interrup√ß√µes primeiro
        if (intent === 'valores' && session.nepqStage !== 'closing') {
            return `Claro, ${session.firstName}. O valor da consulta √© R$${process.env.CONSULTA_VALOR || '400'}. Mas, para garantir que podemos te ajudar, me conte um pouco sobre o que te trouxe aqui.`;
        }
        if (intent === 'convenio' && session.nepqStage !== 'closing') {
            return `Entendi, ${session.firstName}. O Dr. Quelson atende apenas na modalidade particular para garantir a qualidade e o tempo da consulta. Fornecemos recibo para reembolso. Mas o mais importante √© entender seu problema. O que te motivou a nos procurar?`;
        }
        if (intent === 'emergencia') {
            return getEmergencyResponse(session.firstName);
        }

        let reply = '';
        const stage = session.nepqStage;

        // M√°quina de Estados NEPQ expl√≠cita
        switch (stage) {
            case 'situation_start':
                session.problemDescription = message;
                reply = `Entendi, ${session.firstName}. E h√° quanto tempo voc√™ sente isso?`;
                session.nepqStage = 'problem_duration';
                break;

            case 'problem_duration':
                session.problemDuration = message;
                reply = `Nossa... deve ser bem dif√≠cil lidar com isso üòî\nE nesse tempo, voc√™ sente que tem piorado ou se manteve igual?`;
                session.nepqStage = 'problem_worsening';
                break;

            case 'problem_worsening':
                session.problemWorsening = message;
                reply = `Compreendo. Voc√™ j√° tentou resolver de alguma forma, como passar com outro m√©dico ou usar alguma medica√ß√£o?`;
                session.nepqStage = 'problem_tried_solutions';
                break;

            case 'problem_tried_solutions':
                session.triedSolutions = message;
                reply = `Certo. E me diga, ${session.firstName}, esse inc√¥modo j√° chegou a atrapalhar sua rotina? Por exemplo, seu sono, trabalho ou alimenta√ß√£o?`;
                session.nepqStage = 'implication_impact';
                break;

            case 'implication_impact':
                session.problemImpact = message;
                reply = `Imagino como isso desgasta, n√£o s√≥ fisicamente, mas emocionalmente üòû\nAgora, vamos pensar no contr√°rio... Se voc√™ pudesse se livrar disso e voltar a ter paz, como seria sua vida? ‚ú®`;
                session.nepqStage = 'solution_visualization';
                break;

            case 'solution_visualization':
                reply = `√â exatamente para te ajudar a chegar nesse resultado que o Dr. Quelson se dedica, ${session.firstName}.\n\nO que os pacientes mais dizem √© que, pela primeira vez, sentiram que algu√©m realmente parou para investigar a fundo a causa do problema, sem pressa.\n\nO objetivo √© evitar meses de sofrimento com tratamentos que s√≥ aliviam o sintoma. Gostaria de agendar uma consulta para come√ßar esse processo de melhora?`;
                session.nepqStage = 'closing';
                break;

            case 'closing':
                if (intent === 'positiva' || intent === 'agendar') {
                    reply = `√ìtimo, ${session.firstName}! Fico feliz em te ajudar a dar esse passo. Para facilitar, qual seria o melhor dia e per√≠odo (manh√£/tarde) para voc√™? Vou verificar os hor√°rios dispon√≠veis.`;
                    session.nepqStage = 'scheduling';
                } else {
                    reply = `Tudo bem, ${session.firstName}. Entendo que √© uma decis√£o importante. Se precisar de mais alguma informa√ß√£o ou mudar de ideia, estarei por aqui. Cuide-se!`;
                }
                break;

            case 'scheduling':
                reply = `Perfeito! Recebi sua prefer√™ncia por **${message}**. Vou confirmar na agenda do Dr. Quelson e te retorno em instantes com as op√ß√µes de hor√°rio exatas. S√≥ um momento, por favor.`;
                break;

            default:
                reply = `Desculpe, ${session.firstName}, n√£o entendi. Pode reformular, por favor?`;
                break;
        }
        return reply;

    } catch (error) {
        console.error('üö® Erro cr√≠tico em handleConversationFlow:', error);
        const safeName = (session && session.firstName) || 'amigo(a)';
        return `Desculpe, ${safeName}, estou com uma dificuldade t√©cnica. Por favor, ligue para ${process.env.CONTACT_PHONE || '(XX) XXXX-XXXX'}.`;
    }
}

// Handler para a primeira intera√ß√£o, antes de ter o nome do usu√°rio.
function handleInitialMessage(session, message) {
    if (!session.askedName) {
        session.askedName = true;
        return `Ol√°! Bem-vindo(a) ao consult√≥rio do Dr. Quelson. Sou a secret√°ria virtual. Com quem eu falo, por gentileza? üòä`;
    } else {
        session.firstName = extractFirstName(message);
        return getRandomResponse([
            `Oi, ${session.firstName}! √â um prazer falar com voc√™ üòä\nS√≥ pra eu te ajudar da melhor forma, pode me contar rapidinho o que est√° te incomodando? üôè`,
            `Oi, ${session.firstName}! Tudo bem? Antes de falarmos de hor√°rios, posso entender um pouco do que est√° acontecendo? Assim consigo te orientar melhor üß°`
        ]);
    }
}


module.exports = { handleConversationFlow, handleInitialMessage };
